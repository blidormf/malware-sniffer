package com.blidormf.malwaresniffer.controller;

import com.blidormf.malwaresniffer.model.FileInfo;
import com.blidormf.malwaresniffer.model.LinkInfo;
import com.blidormf.malwaresniffer.service.FileUploadService;
import com.blidormf.malwaresniffer.service.LinkUploadService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@Controller
public class MalwareScanController {
    private final FileUploadService fileUploadService;
    private final LinkUploadService linkUploadService;

    @Autowired
    public MalwareScanController(FileUploadService fileUploadService,
                                 LinkUploadService linkUploadService) {
        this.fileUploadService = fileUploadService;
        this.linkUploadService = linkUploadService;
    }

    @GetMapping("/")
    public String showUploadForm() {
        return "upload-form";
    }

    @PostMapping("/file-scan-results")
    public String handleFileUpload(@RequestParam("file") MultipartFile file, Model model, RedirectAttributes redirectAttributes) {
        try {
            FileInfo fileInfo = fileUploadService.saveFile(file);

            model.addAttribute("fileInfo", fileInfo);
            return "file-scan-result";
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("fileError", "An error occurred while scanning the file.");
            return "redirect:/";
        }
    }

    @PostMapping("/link-scan-results")
    public String scanLink(@RequestParam("url") String url, Model model, RedirectAttributes redirectAttributes) {
        try {
            LinkInfo linkInfo = linkUploadService.saveUrl(url);
            model.addAttribute("linkInfo", linkInfo);
            return "link-scan-result";
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("linkError", "An error occurred while scanning the link.");
            return "redirect:/";
        }
    }
}
