package com.blidormf.malwaresniffer.service;

import com.blidormf.malwaresniffer.model.LinkInfo;
import com.blidormf.malwaresniffer.repository.LinkInfoRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class LinkUploadService {
    private final LinkInfoRepository linkInfoRepository;
    private final HashingService hashingService;
    private final MalwareDetectionService malwareDetectionService;

    @Autowired
    public LinkUploadService(LinkInfoRepository linkInfoRepository,
                             HashingService hashingService,
                             MalwareDetectionService malwareDetectionService) {
        this.linkInfoRepository = linkInfoRepository;
        this.hashingService = hashingService;
        this.malwareDetectionService =  malwareDetectionService;
    }

    public LinkInfo saveUrl(String url) throws Exception {
        String urlHash = hashingService.calculateSHA256(url);

        LinkInfo existingUrl = linkInfoRepository.findById(urlHash).orElse(null);
        if (existingUrl != null) {
            return existingUrl;
        }

        LinkInfo linkInfo = new LinkInfo();
        linkInfo.setUrlHash(urlHash);
        linkInfo.setMalicious(malwareDetectionService.detectMaliciousUrl(url));

        return linkInfoRepository.save(linkInfo);
    }
}
