package com.blidormf.malwaresniffer.service;

import com.blidormf.malwaresniffer.model.LinkInfo;
import com.blidormf.malwaresniffer.repository.LinkInfoRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
public class LinkUploadService {
    private final LinkInfoRepository linkInfoRepository;
    private final HashingService hashingService;
    private final MalwareDetectionService malwareDetectionService;

    @Autowired
    public LinkUploadService(LinkInfoRepository linkInfoRepository,
                             HashingService hashingService,
                             MalwareDetectionService malwareDetectionService) {
        this.linkInfoRepository = linkInfoRepository;
        this.hashingService = hashingService;
        this.malwareDetectionService =  malwareDetectionService;
    }

    public LinkInfo saveUrl(String url) throws Exception {
        String linkHash = hashingService.calculateSHA256(url);

        LinkInfo existingLink = linkInfoRepository.findById(linkHash).orElse(null);
        if (existingLink != null) {
            return existingLink;
        }

        LinkInfo linkInfo = new LinkInfo();
        linkInfo.setLinkHash(linkHash);
        linkInfo.setMalicious(malwareDetectionService.detectMaliciousUrl(url));
        linkInfo.setFirstSeen(LocalDateTime.now());
        linkInfo.setUrl(url);

        return linkInfoRepository.save(linkInfo);
    }
}
